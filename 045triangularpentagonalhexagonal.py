#https://projecteuler.net/problem=45 Triangular, pentagonal, and hexagonal
#https://projecteuler.net/thread=45
#Triangle, pentagonal, and hexagonal numbers are generated by the following formulae:
#Triangle Tn=n(n+1)/2 1, 3, 6, 10, 15, ...
#Pentagonal Pn=n(3n−1)/2 1, 5, 12, 22, 35, ...
#Hexagonal Hn=n(2n−1) 1, 6, 15, 28, 45, ...
#It can be verified that T285 = P165 = H143 = 40755.
#Find the next triangle number that is also pentagonal and hexagonal.
import time
startime = time.clock()

#starting nth number
trianglen = 286
pentagonaln = 166
hexagonaln = 144
n = 0
#initialize sets
triangle = set()
pentagonal = set()
hexagonal = set()
tp = set()

#while loop continues when tp which is triangle set and pentagonal set intersection is empty to hexagonal set intersection
while not tp.intersection(hexagonal):	
	triangle.add(((trianglen+n)*((trianglen+n)+1))//2)
	pentagonal.add(((pentagonaln+n)*((3*(pentagonaln+n))-1))//2)
	hexagonal.add((hexagonaln+n)*((2*(hexagonaln+n)-1)))	
	tp = triangle.intersection(pentagonal)	
	n+=1
print(tp.intersection(hexagonal)) #print {1533776805}
endtime = time.clock()
print((endtime-startime),"seconds")
print((round(endtime-startime)),"seconds") #print 33 seconds

# triangle = {(n*(n+1))//2 for n in range(280,290)}
# print(triangle)
# pentagonal = {(n*((3*n)-1))//2 for n in range(160,170)}
# print(pentagonal)
# hexagonal = {n*((2*n)-1) for n in range(138,148)}
# print(hexagonal)
# tp = triangle.intersection(pentagonal)
# print(tp.intersection(hexagonal)) #print {40755}
