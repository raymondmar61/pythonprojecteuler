#https://projecteuler.net/problem=12 Highly divisible triangular number
#https://projecteuler.net/thread=4
#The sequence of triangle numbers is generated by adding the natural numbers. So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The first ten terms would be:  1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...
#Let us list the factors of the first seven triangle numbers:
# 1: 1
# 3: 1,3
# 6: 1,2,3,6
#10: 1,2,5,10
#15: 1,3,5,15
#21: 1,3,7,21
#28: 1,2,4,7,14,28
#We can see that 28 is the first triangle number to have over five divisors.
#What is the value of the first triangle number to have over five hundred divisors?  The value is 76576500 which is triangle number 12375.

trianglenumberth = 1
while True:
    n = 0
    for eachnaturalnumber in range(1,trianglenumberth+1):
        n = n + eachnaturalnumber    
    #run on Python2.7
    def factors(n): 
        return set(reduce(list.__add__, 
                    ([i, n//i] for i in range(1, int(n**0.5) + 1) if n % i == 0)))
    #print(factors(n))
    #print(len(factors(n)))
    if len(factors(n)) >= 501:
        break    
    trianglenumberth += 1
print(factors(n))
print(len(factors(n))) #576
print(trianglenumberth) #12375
print(n) #76576500